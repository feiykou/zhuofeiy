<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/3/25
 * Time: 15:11
 */

namespace app\admin\controller;

use app\admin\model\Cate;
use app\admin\model\Product as ProductModel;

class Product extends Common
{
    private $model;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->model = new ProductModel();
    }

    public function index(){
        $proData = ProductModel::alias('a1')
            ->where("deleted",'=','1')
            ->field('a1.*,a2.name as pname')
            ->order(['id'=>"desc"])
            ->join('art_cate a2','a1.art_cate_id=a2.id','left')
            ->paginate();
        $page = $proData->render();
        $this->assign('proData',$proData);
        return $this->fetch('',['page'=>$page]);
    }

    // 添加页面
    public function add(){
        $cateData = Cate::all();
        $sortArr = sortData($cateData);
        $this->assign('cateArr',$sortArr);
        return $this->fetch();
    }

    // 添加获取数据
    public function getAddData(){
        if(request()->isPost()){
            $product = $this->model;
            $data = request()->post();
            $username = session('username','','admin');
            $proData = [
                'name'         =>  $data['name'],
                'art_cate_id'  =>  $data['art_cate_id'],
                'price'        =>  $data['price'],
                'stock'        =>  $data['stock'],
                'summary'      =>  $data['summary'],
                'content'      =>  $data['content'],
                'attributes'   =>  $data['attributes'],
                'status'       =>  $data['status'],
                'reorder'      =>  empty($data['reorder']) ? '' : $data['reorder'],
                'publisher'    =>  empty($username) ? 'admin' : $username
            ];

            $result = $product->save($proData);

            if($result){
                // 保存图片到图片表中，并把首图保存在产品表中
                if(!empty($data['img_str'])){
                    $imgResult = $product->saveImg($data['img_str'],$product->id);
                    if($imgResult){
                        return json(['type'=>'success','success'=>"添加成功！","code"=>0]);
                    }else{
                        return json(['type'=>'error','error'=>"添加失败！","code"=>1]);
                    }
                }
                return json(['type'=>'success','success'=>"添加成功！","code"=>0]);
            }else{
                return json(['type'=>'error','error'=>"添加失败！","code"=>1]);
            }
        }
    }

    public function edit(){
        $id = input('param.id');
        $cateData = Cate::all();
        $sortArr = sortData($cateData);
        $this->assign('cateArr',$sortArr);

        $proData = $this->model->getProductDetail($id)->toArray();
        // 推荐位
        $attribute_type = config('attributes.attribute_type');
        return $this->fetch('',[
            'proData'         => $proData,
            'attribute_type' => $attribute_type
        ]);
    }
    public function handledit($id){
        if(request()->isPost()){
            $data = request()->post();
            $product = $this->model;
            $username = session('username','','admin');
            $proData = [
                'name'         =>  $data['name'],
                'art_cate_id'  =>  $data['art_cate_id'],
                'price'        =>  $data['price'],
                'stock'        =>  $data['stock'],
                'summary'      =>  $data['summary'],
                'content'      =>  $data['content'],
                'attributes'   =>  $data['attributes'],
                'status'       =>  $data['status'],
                'reorder'      =>  empty($data['reorder']) ? '' : $data['reorder'],
                'publisher'    =>  empty($username) ? 'admin' : $username
            ];

            $result = ProductModel::updateData($id,$proData);

            if($result || $data['img_str'] != ""){

                // 保存图片到图片表中，并把首图保存在产品表中
                if(!empty($data['img_str'])){
                    $imgResult = $product->updateImg($data['img_str'],$id);
                    var_dump($imgResult);die;
                    if($imgResult){
                        return json(['type'=>'success','success'=>"更新成功！","code"=>0]);
                    }else{
                        return json(['type'=>'error','error'=>"更新失败！","code"=>1]);
                    }
                }
                return json(['type'=>'success','success'=>"更新成功！","code"=>0]);
            }else{
                return json(['type'=>'error','error'=>"更新失败！","code"=>1]);
            }

//            if($result){
//                $this->success('更新成功！',url('/product'));
//            }else{
//                $this->error('更新失败！');
//            }
        }
    }


    /**
     * 文章删除
     */
    function removeArt($id){
        $result = $this->model->removeDataById($id);
        if($result){
            return json(['type'=>'success','success'=>"删除成功！","code"=>0]);
        }else{
            return json(['type'=>'success','error'=>"删除失败！","code"=>0]);
        }
    }

    /**
     * 删除多条文章
     */
    function removeMoreArt(){
        $idArr = input('post.')['idsArr'];
        $result = $this->model->removeMoreDataById($idArr);
        if($result){
            return json(['type'=>'success','success'=>"删除成功！","code"=>0]);
        }else{
            return json(['type'=>'success','error'=>"删除失败！","code"=>0]);
        }
    }
}