<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/3/25
 * Time: 15:11
 */

namespace app\admin\controller;

use app\admin\model\Cate;
use app\admin\model\Product as ProductModel;

class Product extends Common
{
    private $model;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->model = new ProductModel();
    }

    public function index(){
        $proData = ProductModel::alias('a1')
            ->where("deleted",'=','1')
            ->field('a1.*,a2.name as pname')
            ->order(['id'=>"desc"])
            ->join('cate a2','a1.art_cate_id=a2.id','left')
            ->paginate();
        $page = $proData->render();
        $this->assign('proData',$proData);
        return $this->fetch('',['page'=>$page]);
    }

    // 添加页面
    public function add(){
        $cateData = Cate::all();
        $sortArr = sortData($cateData);
        $this->assign('cateArr',$sortArr);
        return $this->fetch();
    }

    // 添加获取数据
    public function save(){
        if(!request()->post()){
            $this->error("请求失败");
        }
        $data = request()->post();
        // 产品表关联的product_image图片表的图片id
        $img_detail_ids = empty($data['img_detail_ids'])?'':$data['img_detail_ids'];

        $username = session('username','','admin');
        $proData = [
            'name'         =>  $data['name'],
            'art_cate_id'  =>  $data['art_cate_id'],
            'price'        =>  $data['price'],
            'stock'        =>  $data['stock'],
            'summary'      =>  $data['summary'],
            'content'      =>  $data['content'],
            'attributes'   =>  $data['attributes'],
            'status'       =>  $data['status'],
            'reorder'      =>  empty($data['reorder']) ? '' : $data['reorder'],
            'publisher'    =>  empty($username) ? 'admin' : $username,
            'img_id'       =>  $data['img_id'],
            'main_img_url' =>  $data['main_img_url']
        ];

        $is_exist_id = empty($data['id']);
        //判断是否存在同名
        $is_unique = $this->model->is_unique($data['name'],$is_exist_id?0:$data['id']);
        if($is_unique){
            return json(['type'=>'exits','exits'=>'存在同名类','code'=>1]);
        }

        // 更新数据
        if(!$is_exist_id){
            $proData['id'] = $data['id'];
            return $update = $this->update($proData,$img_detail_ids);
        }

        $result = $this->model->addProductData($proData,$img_detail_ids);

        if($result){
            return json(['type'=>'success','success'=>"添加成功！","code"=>0]);
        }else{
            return json(['type'=>'error','error'=>"添加失败","code"=>1]);
        }
    }

    public function edit(){
        $id = input('param.id');
        $cateData = Cate::all();
        $sortArr = sortData($cateData);
        $this->assign('cateArr',$sortArr);

        $proData = $this->model->getProductDetail($id);
        $imgArr = $this->model->getimgArrByProduct($proData);

        // 推荐位
        $attribute_type = config('attributes.attribute_type');
        return $this->fetch('',[
            'proData'         => $proData,
            'attribute_type' => $attribute_type,
            'imgArr'  => $imgArr
        ]);
    }


    // 更新
    public function update($data,$img_detail_ids){
        $result = $this->model->updateProData($data,$img_detail_ids);
        if($result){
            return json(['type'=>'success','success'=>"更新成功！","code"=>0]);
        }else{
            return json(['type'=>'error','error'=>'更新失败','code'=>1]);
        }
    }




    /**
     * 文章删除
     */
    function removeArt($id){
        $result = $this->model->removeDataById($id);
        if($result){
            return json(['type'=>'success','success'=>"删除成功！","code"=>0]);
        }else{
            return json(['type'=>'success','error'=>"删除失败！","code"=>0]);
        }
    }

    /**
     * 删除多条文章
     */
    function removeMoreArt(){
        $idArr = input('post.')['idsArr'];
        $result = $this->model->removeMoreDataById($idArr);
        if($result){
            return json(['type'=>'success','success'=>"删除成功！","code"=>0]);
        }else{
            return json(['type'=>'success','error'=>"删除失败！","code"=>0]);
        }
    }
}